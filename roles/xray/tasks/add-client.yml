# Adds a new VLESS WS/TLS client into /srv/xray/config.json and restarts container.
- name: Ensure jq is present
  package:
    name: jq
    state: present
  become: true

- name: Generate client UUID if not provided
  command: uuidgen
  register: gen_uuid
  when: xray_new_client_uuid is not defined or xray_new_client_uuid | length == 0
  changed_when: false

- name: Set facts for new client
  set_fact:
    _client_uuid: "{{ xray_new_client_uuid | default(gen_uuid.stdout) }}"
    _client_email: "{{ xray_new_client_name | default('user') }}"

- name: Ensure config exists
  stat:
    path: "{{ xray_compose_dir }}/config.json"
  register: cfg_stat

- name: Fail if config.json missing
  fail:
    msg: "config.json not found at {{ xray_compose_dir }}/config.json. Deploy xray first."
  when: not cfg_stat.stat.exists

- name: Append client into config.json (atomic with tmp file)
  shell: |
    set -e
    cfg="{{ xray_compose_dir }}/config.json"
    tmp="$(mktemp)"
    # Append client object into inbounds[0].settings.clients array.
    jq --arg id "{{ _client_uuid }}" --arg email "{{ _client_email }}" \
      '(.inbounds[0].settings.clients) += [{"id":$id,"email":$email}]' \
      "$cfg" > "$tmp"
    install -m 0644 "$tmp" "$cfg"
    rm -f "$tmp"
  args:
    executable: /bin/bash
  notify: Restart Xray

- name: Show ready-to-import VLESS URL
  debug:
    msg: "vless://{{ _client_uuid }}@{{ xray_domain }}:443?encryption=none&type=ws&security=tls&host={{ xray_domain }}&sni={{ xray_domain }}&path={{ xray_ws_path }}#{{ xray_domain }}-ws"

- name: Show ready-to-use Xray client config.json
  debug:
    msg: |
      {
        "inbounds": [
          {
            "listen": "127.0.0.1",
            "port": 10808,
            "protocol": "socks",
            "settings": { "udp": true }
          },
          {
            "listen": "127.0.0.1",
            "port": 10809,
            "protocol": "http",
            "settings": {}
          }
        ],
        "outbounds": [
          {
            "protocol": "vless",
            "settings": {
              "vnext": [
                {
                  "address": "{{ xray_domain }}",
                  "port": 443,
                  "users": [
                    {
                      "id": "{{ _client_uuid }}",
                      "encryption": "none"
                    }
                  ]
                }
              ]
            },
            "streamSettings": {
              "network": "ws",
              "security": "tls",
              "wsSettings": { "path": "{{ xray_ws_path }}" },
              "tlsSettings": { "serverName": "{{ xray_domain }}" }
            }
          }
        ]
      }
