- name: Update and upgrade system
  apt:
    update_cache: yes
    upgrade: dist

- name: Install base packages
  apt:
    name: "{{ base_packages | default(['curl','htop','git','ufw','fail2ban','jq','ca-certificates','apt-transport-https','gnupg','lsb-release']) }}"
    state: present

- name: Set timezone
  timezone:
    name: "{{ timezone }}"

- name: Compute user password hash if provided (from bootstrap.user_password)
  set_fact:
    user_password_hash: "{{ user_password | password_hash('sha512') }}"
  when: user_password is defined and (user_password | length > 0)

# --- Users & SSH keys ---
- name: Create automation user
  user:
    name: "{{ user }}"
    shell: /bin/bash
    create_home: yes
    groups: "sudo"
    append: yes
    password: "{{ user_password_hash | default(omit) }}"

- name: Detect public key path
  set_fact:
    __pubkey_path: "{{ (lookup('env','SSH_KEY') ~ '.pub') if lookup('env','SSH_KEY') else (lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"

- name: Add SSH public key for automation user
  authorized_key:
    user: "{{ user }}"
    state: present
    key: "{{ lookup('file', __pubkey_path) }}"

- name: Allow passwordless sudo (limited commands)
  copy:
    dest: "/etc/sudoers.d/{{ user }}"
    mode: "0440"
    content: |
      # Passwordless sudo for limited commands
      {{ user }} ALL=(ALL) NOPASSWD:/usr/bin/apt,/usr/bin/apt-get,/usr/bin/systemctl,/usr/bin/journalctl,/usr/sbin/ufw,/usr/bin/docker,/usr/bin/docker-compose,/usr/bin/docker-compose-v2,/bin/cp,/bin/mv,/usr/bin/tee

- name: Ensure /srv exists and owned by automation user
  file:
    path: /srv
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: "0755"

# --- Firewall first: open both SSH ports to avoid lockout ---
- name: Allow new SSH port in UFW
  ufw:
    rule: allow
    port: "{{ ssh_port }}"
    proto: tcp

- name: Ensure legacy SSH port 22 is allowed (bootstrap safety)
  ufw:
    rule: allow
    port: "22"
    proto: tcp

- name: Allow HTTP/HTTPS for Traefik and apps
  ufw:
    rule: allow
    port: "{{ item }}"
    proto: tcp
  loop: ["80", "443"]

- name: Enable UFW with default deny
  ufw:
    state: enabled
    policy: deny

# --- Fail2Ban ---
- name: Enable and start Fail2Ban
  service:
    name: fail2ban
    state: started
    enabled: yes

- name: Configure Fail2Ban for SSH
  copy:
    dest: /etc/fail2ban/jail.local
    mode: "0644"
    content: |
      [sshd]
      enabled = true
      port = {{ ssh_port }}
      filter = sshd
      logpath = /var/log/auth.log
      maxretry = {{ fail2ban_maxretry | default(5) }}
      bantime = {{ fail2ban_bantime | default(3600) }}
  notify: Restart Fail2Ban

# --- SSH hardening (change port, disable pwd & root) ---
- name: Set SSH port to custom port
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^#?Port '
    line: "Port {{ ssh_port }}"
  notify: Restart SSH

- name: Disable password authentication in SSH
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^#?PasswordAuthentication'
    line: 'PasswordAuthentication no'
  notify: Restart SSH

- name: Disable root login in SSH
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^#?PermitRootLogin'
    line: 'PermitRootLogin no'
  notify: Restart SSH

- name: Ensure SSH service is enabled and started
  service:
    name: ssh
    state: started
    enabled: yes

# --- Docker (official repo + compose plugin v2) ---
- name: Include Docker install
  include_tasks: install-docker.yml

- name: Add user to docker group (after Docker install)
  user:
    name: "{{ user }}"
    groups: "docker"
    append: yes

# --- Optional: close port 22 after we will reconnect on new port ---
- name: Optionally deny SSH port 22 (set close_ssh_22=true to apply)
  ufw:
    rule: deny
    port: "22"
    proto: tcp
  when: close_ssh_22 | default(false)
